schemaVersion: 2.2.0
metadata:
  name: go-api-dev
  displayName: Go API Application
  description: A Devfile for developing and running a Go API application.
  tags:
    - Go
    - REST API
  icon: https://raw.githubusercontent.com/devfile/devfile.github.io/master/assets/images/logo.svg
attributes:
  # This attribute hints to tools like OpenShift Dev Spaces what kind of project this is
  # to offer relevant commands/components.
  appSetup:
    container:
      name: go-env
      image: docker.io/golang:1.23-alpine
      ports:
        - name: http-api
          containerPort: 8080

commands:
  - id: install-dependencies
    exec:
      component: go-env
      commandLine: "if [ -f go.sum ]; then go mod download; else go mod tidy; fi"
      workingDir: /app
      group:
        kind: build
        is ); then go mod download; else go mod tidy; fi"
      workingDir: /app
      group:
        kind: build
        isDefault: false # This will be part of the build flow

  - id: build-api
    exec:
      component: go-env
      commandLine: "CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o api ."
      workingDir: /app
      group:
        kind: build
        isDefault: true # This will be the default build command

  - id: run-api
    exec:
      component: go-env
      commandLine: "./api"
      workingDir: /app
      group:
        kind: run
        isDefault: true # This will be the default run command
      env:
        - name: VERSION
          value: "1.0.0"
        - name: BACKEND
          value: "http://localhost:8080/version"
        - name: PORT
          value: "8080"
      
components:
  - name: go-env
    container:
      image: docker.io/golang:1.23-alpine # Using the same base image as your builder stage
      memoryLimit: 1024Mi # Adjust as needed
      cpuLimit: 1 # Adjust as needed
      mountSources: true # Mounts your project's source code into the container
      ports:
        - name: http-api
          containerPort: 8080
          protocol: tcp
